name: Coderrect Scan
description: >
  Coderrect detects concurrency bugs and multithreading errors in multithreaded programs (e.g., data races, race conditions).
branding:
  icon: check
  color: green
inputs:
  buildCommand:
    description: "Custom build command"
    required: false
    default: "make -j"
  cleanCommand:
    description: "Custom clean command"
    required: false
    default: "make clean"
  buildPath:
    description: "The relative path for your build directory"
    required: false
    default: "."
  options:
    description: "Command line options for Coderrect Scanner"
    required: false
    default: "-analyzeAllBinaries"
  exit0:
    description: "Force Coderrect to exit with 0 even when races are detected"
    required: false
    default: false
  toolVersion:
    description: "Version of Coderrect to use"
    required: false
    default: "linux-hpc-0.9.1"
runs:
  using: composite
  steps:
    
    - name: Cache Coderrect Package
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/coderrect-${{ inputs.toolVersion }}
        key: ${{ inputs.toolVersion }}
     
    - name: Download Coderrect Package
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd $HOME
        wget -q https://public-installer-pkg.s3.us-east-2.amazonaws.com/coderrect-${{ inputs.toolVersion }}.tar.gz
        tar zxf coderrect-linux-develop.tar.gz
     
    - name: Install Coderrect Package
      shell: bash
      run: echo "$HOME/coderrect-linux-develop/bin" >> $GITHUB_PATH
     
    - name: Clean Build
      shell: bash
      run: |
        cd ${{ inputs.buildPath }}
        ${{ inputs.cleanCommand }}
    
    - name: Scan Project
      shell: bash
      run: |
        cd ${{ inputs.buildPath }}
        coderrect -noprogress ${{ inputs.options }} ${{ inputs.buildCommand }}
    
    - name: Upload Report  
      shell: bash
      run: |
        cd ${{ inputs.buildPath }}
        coderrect -publish.cloud="DEFAULT" -publish.exit0=${{ inputs.exit0 }}
